%!PS-Adobe-2.0 EPSF-2.0
%%Title: residual.eps
%%Creator: gnuplot 4.4 patchlevel 2
%%CreationDate: Mon Jan 23 18:39:45 2012
%%DocumentFonts: (atend)
%%BoundingBox: 50 50 266 201
%%EndComments
%%BeginProlog
/gnudict 256 dict def
gnudict begin
%
% The following true/false flags may be edited by hand if desired.
% The unit line width and grayscale image gamma correction may also be changed.
%
/Color false def
/Blacktext false def
/Solid false def
/Dashlength 1 def
/Landscape false def
/Level1 false def
/Rounded false def
/ClipToBoundingBox false def
/TransparentPatterns false def
/gnulinewidth 5.000 def
/userlinewidth gnulinewidth def
/Gamma 1.0 def
%
/vshift -46 def
/dl1 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul sub dup 0 le { pop 0.01 } if } if
} def
/dl2 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul add } if
} def
/hpt_ 31.5 def
/vpt_ 31.5 def
/hpt hpt_ def
/vpt vpt_ def
Level1 {} {
/SDict 10 dict def
systemdict /pdfmark known not {
  userdict /pdfmark systemdict /cleartomark get put
} if
SDict begin [
  /Title (residual.eps)
  /Subject (gnuplot plot)
  /Creator (gnuplot 4.4 patchlevel 2)
  /Author (yusa)
%  /Producer (gnuplot)
%  /Keywords ()
  /CreationDate (Mon Jan 23 18:39:45 2012)
  /DOCINFO pdfmark
end
} ifelse
/doclip {
  ClipToBoundingBox {
    newpath 50 50 moveto 266 50 lineto 266 201 lineto 50 201 lineto closepath
    clip
  } if
} def
%
% Gnuplot Prolog Version 4.4 (August 2010)
%
%/SuppressPDFMark true def
%
/M {moveto} bind def
/L {lineto} bind def
/R {rmoveto} bind def
/V {rlineto} bind def
/N {newpath moveto} bind def
/Z {closepath} bind def
/C {setrgbcolor} bind def
/f {rlineto fill} bind def
/g {setgray} bind def
/Gshow {show} def   % May be redefined later in the file to support UTF-8
/vpt2 vpt 2 mul def
/hpt2 hpt 2 mul def
/Lshow {currentpoint stroke M 0 vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Rshow {currentpoint stroke M dup stringwidth pop neg vshift R
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Cshow {currentpoint stroke M dup stringwidth pop -2 div vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/UP {dup vpt_ mul /vpt exch def hpt_ mul /hpt exch def
  /hpt2 hpt 2 mul def /vpt2 vpt 2 mul def} def
/DL {Color {setrgbcolor Solid {pop []} if 0 setdash}
 {pop pop pop 0 setgray Solid {pop []} if 0 setdash} ifelse} def
/BL {stroke userlinewidth 2 mul setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/AL {stroke userlinewidth 2 div setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/UL {dup gnulinewidth mul /userlinewidth exch def
	dup 1 lt {pop 1} if 10 mul /udl exch def} def
/PL {stroke userlinewidth setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
3.8 setmiterlimit
% Default Line colors
/LCw {1 1 1} def
/LCb {0 0 0} def
/LCa {0 0 0} def
/LC0 {1 0 0} def
/LC1 {0 1 0} def
/LC2 {0 0 1} def
/LC3 {1 0 1} def
/LC4 {0 1 1} def
/LC5 {1 1 0} def
/LC6 {0 0 0} def
/LC7 {1 0.3 0} def
/LC8 {0.5 0.5 0.5} def
% Default Line Types
/LTw {PL [] 1 setgray} def
/LTb {BL [] LCb DL} def
/LTa {AL [1 udl mul 2 udl mul] 0 setdash LCa setrgbcolor} def
/LT0 {PL [] LC0 DL} def
/LT1 {PL [4 dl1 2 dl2] LC1 DL} def
/LT2 {PL [2 dl1 3 dl2] LC2 DL} def
/LT3 {PL [1 dl1 1.5 dl2] LC3 DL} def
/LT4 {PL [6 dl1 2 dl2 1 dl1 2 dl2] LC4 DL} def
/LT5 {PL [3 dl1 3 dl2 1 dl1 3 dl2] LC5 DL} def
/LT6 {PL [2 dl1 2 dl2 2 dl1 6 dl2] LC6 DL} def
/LT7 {PL [1 dl1 2 dl2 6 dl1 2 dl2 1 dl1 2 dl2] LC7 DL} def
/LT8 {PL [2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 4 dl2] LC8 DL} def
/Pnt {stroke [] 0 setdash gsave 1 setlinecap M 0 0 V stroke grestore} def
/Dia {stroke [] 0 setdash 2 copy vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke
  Pnt} def
/Pls {stroke [] 0 setdash vpt sub M 0 vpt2 V
  currentpoint stroke M
  hpt neg vpt neg R hpt2 0 V stroke
 } def
/Box {stroke [] 0 setdash 2 copy exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke
  Pnt} def
/Crs {stroke [] 0 setdash exch hpt sub exch vpt add M
  hpt2 vpt2 neg V currentpoint stroke M
  hpt2 neg 0 R hpt2 vpt2 V stroke} def
/TriU {stroke [] 0 setdash 2 copy vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke
  Pnt} def
/Star {2 copy Pls Crs} def
/BoxF {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath fill} def
/TriUF {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath fill} def
/TriD {stroke [] 0 setdash 2 copy vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke
  Pnt} def
/TriDF {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath fill} def
/DiaF {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath fill} def
/Pent {stroke [] 0 setdash 2 copy gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore Pnt} def
/PentF {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath fill grestore} def
/Circle {stroke [] 0 setdash 2 copy
  hpt 0 360 arc stroke Pnt} def
/CircleF {stroke [] 0 setdash hpt 0 360 arc fill} def
/C0 {BL [] 0 setdash 2 copy moveto vpt 90 450 arc} bind def
/C1 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C2 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C3 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C4 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C5 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc
	2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc} bind def
/C6 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C7 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C8 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C9 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 450 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C10 {BL [] 0 setdash 2 copy 2 copy moveto vpt 270 360 arc closepath fill
	2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C11 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C12 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C13 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C14 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 360 arc closepath fill
	vpt 0 360 arc} bind def
/C15 {BL [] 0 setdash 2 copy vpt 0 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/Rec {newpath 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
	neg 0 rlineto closepath} bind def
/Square {dup Rec} bind def
/Bsquare {vpt sub exch vpt sub exch vpt2 Square} bind def
/S0 {BL [] 0 setdash 2 copy moveto 0 vpt rlineto BL Bsquare} bind def
/S1 {BL [] 0 setdash 2 copy vpt Square fill Bsquare} bind def
/S2 {BL [] 0 setdash 2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S3 {BL [] 0 setdash 2 copy exch vpt sub exch vpt2 vpt Rec fill Bsquare} bind def
/S4 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S5 {BL [] 0 setdash 2 copy 2 copy vpt Square fill
	exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S6 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S7 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S8 {BL [] 0 setdash 2 copy vpt sub vpt Square fill Bsquare} bind def
/S9 {BL [] 0 setdash 2 copy vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S10 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt Square fill
	Bsquare} bind def
/S11 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt2 vpt Rec fill
	Bsquare} bind def
/S12 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill Bsquare} bind def
/S13 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S14 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S15 {BL [] 0 setdash 2 copy Bsquare fill Bsquare} bind def
/D0 {gsave translate 45 rotate 0 0 S0 stroke grestore} bind def
/D1 {gsave translate 45 rotate 0 0 S1 stroke grestore} bind def
/D2 {gsave translate 45 rotate 0 0 S2 stroke grestore} bind def
/D3 {gsave translate 45 rotate 0 0 S3 stroke grestore} bind def
/D4 {gsave translate 45 rotate 0 0 S4 stroke grestore} bind def
/D5 {gsave translate 45 rotate 0 0 S5 stroke grestore} bind def
/D6 {gsave translate 45 rotate 0 0 S6 stroke grestore} bind def
/D7 {gsave translate 45 rotate 0 0 S7 stroke grestore} bind def
/D8 {gsave translate 45 rotate 0 0 S8 stroke grestore} bind def
/D9 {gsave translate 45 rotate 0 0 S9 stroke grestore} bind def
/D10 {gsave translate 45 rotate 0 0 S10 stroke grestore} bind def
/D11 {gsave translate 45 rotate 0 0 S11 stroke grestore} bind def
/D12 {gsave translate 45 rotate 0 0 S12 stroke grestore} bind def
/D13 {gsave translate 45 rotate 0 0 S13 stroke grestore} bind def
/D14 {gsave translate 45 rotate 0 0 S14 stroke grestore} bind def
/D15 {gsave translate 45 rotate 0 0 S15 stroke grestore} bind def
/DiaE {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke} def
/BoxE {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke} def
/TriUE {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke} def
/TriDE {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke} def
/PentE {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore} def
/CircE {stroke [] 0 setdash 
  hpt 0 360 arc stroke} def
/Opaque {gsave closepath 1 setgray fill grestore 0 setgray closepath} def
/DiaW {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V Opaque stroke} def
/BoxW {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V Opaque stroke} def
/TriUW {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V Opaque stroke} def
/TriDW {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V Opaque stroke} def
/PentW {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  Opaque stroke grestore} def
/CircW {stroke [] 0 setdash 
  hpt 0 360 arc Opaque stroke} def
/BoxFill {gsave Rec 1 setgray fill grestore} def
/Density {
  /Fillden exch def
  currentrgbcolor
  /ColB exch def /ColG exch def /ColR exch def
  /ColR ColR Fillden mul Fillden sub 1 add def
  /ColG ColG Fillden mul Fillden sub 1 add def
  /ColB ColB Fillden mul Fillden sub 1 add def
  ColR ColG ColB setrgbcolor} def
/BoxColFill {gsave Rec PolyFill} def
/PolyFill {gsave Density fill grestore grestore} def
/h {rlineto rlineto rlineto gsave closepath fill grestore} bind def
%
% PostScript Level 1 Pattern Fill routine for rectangles
% Usage: x y w h s a XX PatternFill
%	x,y = lower left corner of box to be filled
%	w,h = width and height of box
%	  a = angle in degrees between lines and x-axis
%	 XX = 0/1 for no/yes cross-hatch
%
/PatternFill {gsave /PFa [ 9 2 roll ] def
  PFa 0 get PFa 2 get 2 div add PFa 1 get PFa 3 get 2 div add translate
  PFa 2 get -2 div PFa 3 get -2 div PFa 2 get PFa 3 get Rec
  gsave 1 setgray fill grestore clip
  currentlinewidth 0.5 mul setlinewidth
  /PFs PFa 2 get dup mul PFa 3 get dup mul add sqrt def
  0 0 M PFa 5 get rotate PFs -2 div dup translate
  0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 M 0 PFs V} for
  0 PFa 6 get ne {
	0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 2 1 roll M PFs 0 V} for
 } if
  stroke grestore} def
%
/languagelevel where
 {pop languagelevel} {1} ifelse
 2 lt
	{/InterpretLevel1 true def}
	{/InterpretLevel1 Level1 def}
 ifelse
%
% PostScript level 2 pattern fill definitions
%
/Level2PatternFill {
/Tile8x8 {/PaintType 2 /PatternType 1 /TilingType 1 /BBox [0 0 8 8] /XStep 8 /YStep 8}
	bind def
/KeepColor {currentrgbcolor [/Pattern /DeviceRGB] setcolorspace} bind def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke} 
>> matrix makepattern
/Pat1 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke
	0 4 M 4 8 L 8 4 L 4 0 L 0 4 L stroke}
>> matrix makepattern
/Pat2 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 0 8 L
	8 8 L 8 0 L 0 0 L fill}
>> matrix makepattern
/Pat3 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 8 M 8 -4 L
	0 12 M 12 0 L stroke}
>> matrix makepattern
/Pat4 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 0 M 8 12 L
	0 -4 M 12 8 L stroke}
>> matrix makepattern
/Pat5 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 8 M 4 -4 L
	0 12 M 8 -4 L 4 12 M 10 0 L stroke}
>> matrix makepattern
/Pat6 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 0 M 4 12 L
	0 -4 M 8 12 L 4 -4 M 10 8 L stroke}
>> matrix makepattern
/Pat7 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 8 -2 M -4 4 L
	12 0 M -4 8 L 12 4 M 0 10 L stroke}
>> matrix makepattern
/Pat8 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 -2 M 12 4 L
	-4 0 M 12 8 L -4 4 M 8 10 L stroke}
>> matrix makepattern
/Pat9 exch def
/Pattern1 {PatternBgnd KeepColor Pat1 setpattern} bind def
/Pattern2 {PatternBgnd KeepColor Pat2 setpattern} bind def
/Pattern3 {PatternBgnd KeepColor Pat3 setpattern} bind def
/Pattern4 {PatternBgnd KeepColor Landscape {Pat5} {Pat4} ifelse setpattern} bind def
/Pattern5 {PatternBgnd KeepColor Landscape {Pat4} {Pat5} ifelse setpattern} bind def
/Pattern6 {PatternBgnd KeepColor Landscape {Pat9} {Pat6} ifelse setpattern} bind def
/Pattern7 {PatternBgnd KeepColor Landscape {Pat8} {Pat7} ifelse setpattern} bind def
} def
%
%
%End of PostScript Level 2 code
%
/PatternBgnd {
  TransparentPatterns {} {gsave 1 setgray fill grestore} ifelse
} def
%
% Substitute for Level 2 pattern fill codes with
% grayscale if Level 2 support is not selected.
%
/Level1PatternFill {
/Pattern1 {0.250 Density} bind def
/Pattern2 {0.500 Density} bind def
/Pattern3 {0.750 Density} bind def
/Pattern4 {0.125 Density} bind def
/Pattern5 {0.375 Density} bind def
/Pattern6 {0.625 Density} bind def
/Pattern7 {0.875 Density} bind def
} def
%
% Now test for support of Level 2 code
%
Level1 {Level1PatternFill} {Level2PatternFill} ifelse
%
/Symbol-Oblique /Symbol findfont [1 0 .167 1 0 0] makefont
dup length dict begin {1 index /FID eq {pop pop} {def} ifelse} forall
currentdict end definefont pop
/MFshow {
   { dup 5 get 3 ge
     { 5 get 3 eq {gsave} {grestore} ifelse }
     {dup dup 0 get findfont exch 1 get scalefont setfont
     [ currentpoint ] exch dup 2 get 0 exch R dup 5 get 2 ne {dup dup 6
     get exch 4 get {Gshow} {stringwidth pop 0 R} ifelse }if dup 5 get 0 eq
     {dup 3 get {2 get neg 0 exch R pop} {pop aload pop M} ifelse} {dup 5
     get 1 eq {dup 2 get exch dup 3 get exch 6 get stringwidth pop -2 div
     dup 0 R} {dup 6 get stringwidth pop -2 div 0 R 6 get
     show 2 index {aload pop M neg 3 -1 roll neg R pop pop} {pop pop pop
     pop aload pop M} ifelse }ifelse }ifelse }
     ifelse }
   forall} def
/Gswidth {dup type /stringtype eq {stringwidth} {pop (n) stringwidth} ifelse} def
/MFwidth {0 exch { dup 5 get 3 ge { 5 get 3 eq { 0 } { pop } ifelse }
 {dup 3 get{dup dup 0 get findfont exch 1 get scalefont setfont
     6 get Gswidth pop add} {pop} ifelse} ifelse} forall} def
/MLshow { currentpoint stroke M
  0 exch R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/MRshow { currentpoint stroke M
  exch dup MFwidth neg 3 -1 roll R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/MCshow { currentpoint stroke M
  exch dup MFwidth -2 div 3 -1 roll R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/XYsave    { [( ) 1 2 true false 3 ()] } bind def
/XYrestore { [( ) 1 2 true false 4 ()] } bind def
end
%%EndProlog
gnudict begin
gsave
doclip
50 50 translate
0.050 0.050 scale
0 setgray
newpath
(URWPalladioL-Roma) findfont 140 scalefont setfont
1.000 UL
LTb
602 448 M
63 0 V
3402 0 R
-63 0 V
stroke
518 448 M
[ [(URWPalladioL-Roma) 140.0 0.0 true true 0 (10)]
[(URWPalladioL-Roma) 112.0 70.0 true true 0 (-3)]
] -60.7 MRshow
1.000 UL
LTb
602 690 M
31 0 V
3434 0 R
-31 0 V
602 831 M
31 0 V
3434 0 R
-31 0 V
602 931 M
31 0 V
3434 0 R
-31 0 V
602 1009 M
31 0 V
3434 0 R
-31 0 V
602 1072 M
31 0 V
3434 0 R
-31 0 V
602 1126 M
31 0 V
3434 0 R
-31 0 V
602 1173 M
31 0 V
3434 0 R
-31 0 V
602 1214 M
31 0 V
3434 0 R
-31 0 V
602 1250 M
63 0 V
3402 0 R
-63 0 V
stroke
518 1250 M
[ [(URWPalladioL-Roma) 140.0 0.0 true true 0 (10)]
[(URWPalladioL-Roma) 112.0 70.0 true true 0 (-2)]
] -60.7 MRshow
1.000 UL
LTb
602 1492 M
31 0 V
3434 0 R
-31 0 V
602 1633 M
31 0 V
3434 0 R
-31 0 V
602 1733 M
31 0 V
3434 0 R
-31 0 V
602 1811 M
31 0 V
3434 0 R
-31 0 V
602 1875 M
31 0 V
3434 0 R
-31 0 V
602 1928 M
31 0 V
3434 0 R
-31 0 V
602 1975 M
31 0 V
3434 0 R
-31 0 V
602 2016 M
31 0 V
3434 0 R
-31 0 V
602 2053 M
63 0 V
3402 0 R
-63 0 V
stroke
518 2053 M
[ [(URWPalladioL-Roma) 140.0 0.0 true true 0 (10)]
[(URWPalladioL-Roma) 112.0 70.0 true true 0 (-1)]
] -60.7 MRshow
1.000 UL
LTb
602 2294 M
31 0 V
3434 0 R
-31 0 V
602 2435 M
31 0 V
3434 0 R
-31 0 V
602 2536 M
31 0 V
3434 0 R
-31 0 V
602 2613 M
31 0 V
3434 0 R
-31 0 V
602 2677 M
31 0 V
3434 0 R
-31 0 V
602 2731 M
31 0 V
3434 0 R
-31 0 V
602 2777 M
31 0 V
3434 0 R
-31 0 V
602 2818 M
31 0 V
3434 0 R
-31 0 V
602 2855 M
63 0 V
3402 0 R
-63 0 V
stroke
518 2855 M
[ [(URWPalladioL-Roma) 140.0 0.0 true true 0 (10)]
[(URWPalladioL-Roma) 112.0 70.0 true true 0 (0)]
] -60.7 MRshow
1.000 UL
LTb
602 448 M
0 63 V
0 2344 R
0 -63 V
stroke
602 308 M
[ [(URWPalladioL-Roma) 140.0 0.0 true true 0 ( 0)]
] -46.7 MCshow
1.000 UL
LTb
991 448 M
0 63 V
0 2344 R
0 -63 V
stroke
991 308 M
[ [(URWPalladioL-Roma) 140.0 0.0 true true 0 ( 20)]
] -46.7 MCshow
1.000 UL
LTb
1381 448 M
0 63 V
0 2344 R
0 -63 V
stroke
1381 308 M
[ [(URWPalladioL-Roma) 140.0 0.0 true true 0 ( 40)]
] -46.7 MCshow
1.000 UL
LTb
1770 448 M
0 63 V
0 2344 R
0 -63 V
stroke
1770 308 M
[ [(URWPalladioL-Roma) 140.0 0.0 true true 0 ( 60)]
] -46.7 MCshow
1.000 UL
LTb
2159 448 M
0 63 V
0 2344 R
0 -63 V
stroke
2159 308 M
[ [(URWPalladioL-Roma) 140.0 0.0 true true 0 ( 80)]
] -46.7 MCshow
1.000 UL
LTb
2549 448 M
0 63 V
0 2344 R
0 -63 V
stroke
2549 308 M
[ [(URWPalladioL-Roma) 140.0 0.0 true true 0 ( 100)]
] -46.7 MCshow
1.000 UL
LTb
2938 448 M
0 63 V
0 2344 R
0 -63 V
stroke
2938 308 M
[ [(URWPalladioL-Roma) 140.0 0.0 true true 0 ( 120)]
] -46.7 MCshow
1.000 UL
LTb
3327 448 M
0 63 V
0 2344 R
0 -63 V
stroke
3327 308 M
[ [(URWPalladioL-Roma) 140.0 0.0 true true 0 ( 140)]
] -46.7 MCshow
1.000 UL
LTb
3717 448 M
0 63 V
0 2344 R
0 -63 V
stroke
3717 308 M
[ [(URWPalladioL-Roma) 140.0 0.0 true true 0 ( 160)]
] -46.7 MCshow
1.000 UL
LTb
1.000 UL
LTb
602 2855 N
602 448 L
3465 0 V
0 2407 V
-3465 0 V
Z stroke
LCb setrgbcolor
112 1651 M
currentpoint gsave translate -270 rotate 0 0 moveto
[ [(URWPalladioL-Roma) 140.0 0.0 true true 0 (Relative residual norm)]
] -46.7 MCshow
grestore
LTb
LCb setrgbcolor
2334 98 M
[ [(URWPalladioL-Roma) 140.0 0.0 true true 0 (Number of total iterations)]
] -46.7 MCshow
LTb
1.000 UP
1.000 UL
LTb
% Begin plot #1
1.000 UP
1.000 UL
LT0
602 2855 M
19 -76 V
20 -845 V
19 -96 V
20 -104 V
19 -428 V
20 215 V
19 19 V
20 -167 V
19 -42 V
797 986 L
19 58 V
20 28 V
855 825 L
20 -31 V
894 536 L
19 -42 V
20 725 V
952 448 L
20 2407 R
19 -85 V
20 -833 V
19 -97 V
20 -106 V
19 -423 V
20 222 V
19 -16 V
20 -153 V
19 -41 V
20 -359 V
19 77 V
19 -78 V
20 -125 V
19 -39 V
20 -347 V
19 315 V
20 -202 V
12 -117 V
27 2407 R
19 -93 V
20 -822 V
19 -99 V
20 -107 V
19 -419 V
20 231 V
19 -56 V
19 -134 V
20 -42 V
19 -386 V
20 107 V
19 -123 V
20 -41 V
19 -44 V
18 -379 V
21 2407 R
20 -102 V
19 -809 V
20 -101 V
19 -109 V
20 -414 V
19 240 V
19 -98 V
20 -114 V
19 -42 V
20 -426 V
19 142 V
20 84 V
19 -187 V
20 -35 V
19 -326 V
20 81 V
19 -120 V
20 -36 V
5 -35 V
34 2407 R
19 -111 V
19 -797 V
20 -103 V
19 -110 V
20 -409 V
19 250 V
20 -143 V
19 -92 V
20 -43 V
19 -468 V
20 169 V
19 168 V
20 -205 V
19 -40 V
20 -373 V
19 129 V
19 -24 V
20 -125 V
19 -35 V
2 -45 V
37 2407 R
20 -120 V
19 -785 V
20 -104 V
19 -112 V
20 -404 V
19 260 V
20 -186 V
19 -72 V
19 -45 V
20 -492 V
19 173 V
20 8 V
19 -49 V
20 -77 V
19 -201 V
20 -52 V
19 410 V
15 -559 V
24 2407 R
20 -129 V
19 -773 V
20 -105 V
19 -114 V
19 -398 V
20 271 V
19 -227 V
20 -55 V
stroke 2977 1325 M
19 -51 V
20 -474 V
19 207 V
20 -126 V
19 -142 V
20 181 V
19 -81 V
18 -391 V
21 2407 R
20 -138 V
19 -760 V
19 -107 V
20 -116 V
19 -392 V
20 282 V
19 -263 V
20 -42 V
19 -69 V
20 -398 V
19 344 V
20 -303 V
19 -75 V
20 -60 V
19 -144 V
14 -166 V
25 2407 R
19 -148 V
20 -747 V
19 -108 V
20 -118 V
19 -385 V
20 293 V
19 -290 V
20 -40 V
19 -155 V
20 -204 V
19 455 V
20 -633 V
19 -43 V
20 -40 V
9 -244 V
29 2407 R
20 -158 V
19 -734 V
20 -109 V
19 -120 V
20 -378 V
19 305 V
20 -307 V
19 -48 V
20 -524 V
19 206 V
20 -25 V
19 -44 V
20 -74 V
18 -397 V
602 2855 Pls
621 2779 Pls
641 1934 Pls
660 1838 Pls
680 1734 Pls
699 1306 Pls
719 1521 Pls
738 1540 Pls
758 1373 Pls
777 1331 Pls
797 986 Pls
816 1044 Pls
836 1072 Pls
855 825 Pls
875 794 Pls
894 536 Pls
913 494 Pls
933 1219 Pls
972 2855 Pls
991 2770 Pls
1011 1937 Pls
1030 1840 Pls
1050 1734 Pls
1069 1311 Pls
1089 1533 Pls
1108 1517 Pls
1128 1364 Pls
1147 1323 Pls
1167 964 Pls
1186 1041 Pls
1205 963 Pls
1225 838 Pls
1244 799 Pls
1264 452 Pls
1283 767 Pls
1303 565 Pls
1342 2855 Pls
1361 2762 Pls
1381 1940 Pls
1400 1841 Pls
1420 1734 Pls
1439 1315 Pls
1459 1546 Pls
1478 1490 Pls
1497 1356 Pls
1517 1314 Pls
1536 928 Pls
1556 1035 Pls
1575 912 Pls
1595 871 Pls
1614 827 Pls
1653 2855 Pls
1673 2753 Pls
1692 1944 Pls
1712 1843 Pls
1731 1734 Pls
1751 1320 Pls
1770 1560 Pls
1789 1462 Pls
1809 1348 Pls
1828 1306 Pls
1848 880 Pls
1867 1022 Pls
1887 1106 Pls
1906 919 Pls
1926 884 Pls
1945 558 Pls
1965 639 Pls
1984 519 Pls
2004 483 Pls
2043 2855 Pls
2062 2744 Pls
2081 1947 Pls
2101 1844 Pls
2120 1734 Pls
2140 1325 Pls
2159 1575 Pls
2179 1432 Pls
2198 1340 Pls
2218 1297 Pls
2237 829 Pls
2257 998 Pls
2276 1166 Pls
2296 961 Pls
2315 921 Pls
2335 548 Pls
2354 677 Pls
2373 653 Pls
2393 528 Pls
2412 493 Pls
2451 2855 Pls
2471 2735 Pls
2490 1950 Pls
2510 1846 Pls
2529 1734 Pls
2549 1330 Pls
2568 1590 Pls
2588 1404 Pls
2607 1332 Pls
2626 1287 Pls
2646 795 Pls
2665 968 Pls
2685 976 Pls
2704 927 Pls
2724 850 Pls
2743 649 Pls
2763 597 Pls
2782 1007 Pls
2821 2855 Pls
2841 2726 Pls
2860 1953 Pls
2880 1848 Pls
2899 1734 Pls
2918 1336 Pls
2938 1607 Pls
2957 1380 Pls
2977 1325 Pls
2996 1274 Pls
3016 800 Pls
3035 1007 Pls
3055 881 Pls
3074 739 Pls
3094 920 Pls
3113 839 Pls
3152 2855 Pls
3172 2717 Pls
3191 1957 Pls
3210 1850 Pls
3230 1734 Pls
3249 1342 Pls
3269 1624 Pls
3288 1361 Pls
3308 1319 Pls
3327 1250 Pls
3347 852 Pls
3366 1196 Pls
3386 893 Pls
3405 818 Pls
3425 758 Pls
3444 614 Pls
3483 2855 Pls
3502 2707 Pls
3522 1960 Pls
3541 1852 Pls
3561 1734 Pls
3580 1349 Pls
3600 1642 Pls
3619 1352 Pls
3639 1312 Pls
3658 1157 Pls
3678 953 Pls
3697 1408 Pls
3717 775 Pls
3736 732 Pls
3756 692 Pls
3794 2855 Pls
3814 2697 Pls
3833 1963 Pls
3853 1854 Pls
3872 1734 Pls
3892 1356 Pls
3911 1661 Pls
3931 1354 Pls
3950 1306 Pls
3970 782 Pls
3989 988 Pls
4009 963 Pls
4028 919 Pls
4048 845 Pls
% End plot #1
1.000 UL
LTb
602 2855 N
602 448 L
3465 0 V
0 2407 V
-3465 0 V
Z stroke
1.000 UP
1.000 UL
LTb
stroke
grestore
end
showpage
%%Trailer
%%DocumentFonts: URWPalladioL-Roma
